<div class="header-container" id="criminal-details" data-criminal-id="{{criminal.Criminal_ID}}">
    <h3>
        Displaying details of #{{criminal.Criminal_ID}}:
        <span id="First" ondblclick="makeEditable(this)">{{#if
            criminal.First}}{{criminal.First}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span>,
        <span id="Last" ondblclick="makeEditable(this)">{{#if
            criminal.Last}}{{criminal.Last}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span>
    </h3>
    <div class="button-container">
        <button onclick="window.location.href='/criminal';" class="normal-button">Back to All Criminals</button>
    </div>
    <div class="button-container">
        <button onclick="confirmDelete('{{criminal.Criminal_ID}}')" class="normal-button">Delete</button>
    </div>
</div>
<br>
<table>
    <tr style="background: rgb(200, 200, 200)">
        <th>Street</th>
        <th>City, State</th>
        <th>Zipcode</th>
        <th>Phone</th>
        <th>Violent</th>
        <th>Probation</th>
    </tr>
    <tr>
        <td><span id="street" ondblclick="makeEditable(this)">{{#if
                criminal.Street}}{{criminal.Street}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span></td>
        <td><span id="city" ondblclick="makeEditable(this)">{{#if
                criminal.City}}{{criminal.City}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span>, <span id="state"
                ondblclick="makeEditable(this)">{{#if
                criminal.State}}{{criminal.State}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span></td>
        <td><span id="zip" ondblclick="makeEditable(this)">{{#if
                criminal.Zip}}{{criminal.Zip}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span></td>
        <td><span id="phone" ondblclick="makeEditable(this)">{{#if
                criminal.Phone}}{{criminal.Phone}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span></td>
        <td>
            <select id="v_status" class="editable-select" onchange="saveData(this)">
                <option value="Y" {{#if criminal.selectedYesViolent}}selected{{/if}}>Yes</option>
                <option value="N" {{#if criminal.selectedNoViolent}}selected{{/if}}>No</option>
            </select>
        </td>
        <td>
            <select id="p_status" class="editable-select" onchange="saveData(this)">
                <option value="Y" {{#if criminal.selectedYesProbation}}selected{{/if}}>Yes</option>
                <option value="N" {{#if criminal.selectedNoProbation}}selected{{/if}}>No</option>
            </select>
        </td>
    </tr>
</table>
<br>
<table>
    <tr style="background: rgb(200, 200, 200)">
        <th>Sentence ID</th>
        <th>Type</th>
        <th>Probation Officer(s)</th>
        <th>Start</th>
        <th>End</th>
        <th>Violation</th>
    </tr>
    {{#each sentences}}
    <tr>
        <td>{{this.Sentence_ID}}</td>
        <td>{{this.Type}}</td>
        <td>{{#if this.Prob_ID}}<a href="/prob_officer/{{this.Prob_ID}}">#{{this.Prob_ID}}</a>{{else}}N/A{{/if}}
        </td>
        <td>{{this.Start_date}}</td>
        <td>{{this.End_date}}</td>
        <td>{{this.Violations}}</td>
    </tr>
    {{/each}}
</table>
<div class="button-container">
    <a href="/sentence/new?criminal_id={{criminal.Criminal_ID}}" class="normal-button">Add Sentence</a>
</div>
<br>
<table>
    <tr style="background: rgb(200, 200, 200)">
        <th>Crime ID</th>
        <th>Type</th>
        <th>Date Charged</th>
        <th>Status</th>
        <th>Hearing Date</th>
        <th>Appeal Cut Date</th>
    </tr>
    {{#each crimes}}
    <tr>
        <td><a href="/crime/{{this.Crime_ID}}">{{this.Crime_ID}}</a></td>
        <td>{{this.Classification}}</td>
        <td>{{this.Date_charged}}</td>
        <td>{{this.Status}}</td>
        <td>{{this.Hearing_date}}</td>
        <td>{{this.Appeal_cut_date}}</td>
    </tr>
    {{/each}}
</table>
<div class="button-container">
    <a href="/crime/new?criminal_id={{criminal.Criminal_ID}}" class="normal-button">Add Crime</a>
</div>

<h3>Aliases</h3>
<table>
    <thead>
        <tr>
            <th>Alias</th>
        </tr>
    </thead>
    <tbody>
        {{#each aliases}}
        <tr>
            <td>{{this.Alias}}</td>
        </tr>
        {{/each}}
    </tbody>
</table>
<div class="button-container">
    <a href="/criminal/alias/new?criminal_id={{criminal.Criminal_ID}}" class="normal-button">Add Alias</a>
</div>


<script>
    function confirmDelete() {
        const criminalId = document.querySelector('#criminal-details').getAttribute('data-criminal-id');
        if (confirm("Are you sure you want to delete this criminal?")) {
            fetch(`/criminal/${criminalId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ id: criminalId })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Criminal successfully deleted');
                        window.location.href = '/criminal';
                    } else {
                        alert('Failed to delete. Please try again.');
                    }
                })
                .catch(error => {
                    console.error('Error deleting criminal:', error);
                    alert('Failed to delete. Please try again.');
                });
        }
    }

    function toggleEdit() {
        const detailsContainer = document.getElementById('criminal-details');
        const editableElements = detailsContainer.querySelectorAll('span, select');

        editableElements.forEach(element => {
            if (element.tagName === 'SPAN') {
                if (element.getAttribute('data-editable') === 'true') {
                    element.setAttribute('data-editable', 'false');
                    element.contentEditable = false;
                } else {
                    element.setAttribute('data-editable', 'true');
                    element.contentEditable = true;
                }
            } else if (element.tagName === 'SELECT') {
                element.disabled = !element.disabled;
            }
        });
    }


    function makeEditable(element) {
        const criminalId = document.querySelector('#criminal-details').getAttribute('data-criminal-id');
        const isEditable = element.tagName === 'SELECT' ? element.disabled : element.getAttribute('data-editable') === 'true';

        if (!isEditable) {
            if (element.tagName === 'SPAN') {
                element.setAttribute('data-editable', 'true');
                element.contentEditable = true;
            } else if (element.tagName === 'SELECT') {
                element.disabled = false;
            }
            element.focus();
            element.onblur = () => saveData(criminalId, element);
            if (element.tagName === 'SPAN') {
                element.onkeypress = function (e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        element.blur();
                    }
                };
            }
        } else {
            if (element.tagName === 'SPAN') {
                element.setAttribute('data-editable', 'false');
                element.contentEditable = false;
            } else if (element.tagName === 'SELECT') {
                element.disabled = true;
            }
        }
    }

    document.addEventListener('DOMContentLoaded', function () {
        document.querySelectorAll('select.editable-select').forEach(select => {
            select.setAttribute('data-original', select.value);
        });
        document.querySelectorAll('span').forEach(span => {
            span.ondblclick = function () {
                this.contentEditable = true;
                this.focus();
            };
            span.onblur = function () {
                let cleanText = this.textContent.replace(/\s/g, '');
                this.textContent = cleanText;
                saveData(this);
                this.contentEditable = false;
            };
            span.onkeypress = function (e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    this.blur();
                }
            };
        });
    });

    function saveData(element) {
        const criminalId = document.querySelector('#criminal-details').getAttribute('data-criminal-id');
        const field = element.id;
        const value = element.tagName === 'SELECT' ? element.value : element.textContent.trim();

        if (value !== element.getAttribute('data-original')) {
            fetch(`/criminal/${field}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ id: criminalId, value: value })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log('Update successful');
                        element.setAttribute('data-original', value);
                    } else {
                        console.log('Update failed');
                        alert('Failed to update. Please try again.');
                    }
                })
                .catch(error => {
                    console.error('Error updating:', error);
                });
        } else {
            console.log('No changes detected, update skipped.');
        }
    }

</script>