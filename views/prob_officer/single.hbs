<div class="header-container" id="prob-officer-details" data-prob-officer-id="{{probOfficer.Prob_ID}}">
    <h3>
        Displaying details of #{{probOfficer.Prob_ID}}:
        <span id="First" ondblclick="makeEditable(this)">{{#if probOfficer.First}}{{probOfficer.First}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span>,
        <span id="Last" ondblclick="makeEditable(this)">{{#if probOfficer.Last}}{{probOfficer.Last}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span>
    </h3>

    <div class="button-container">
    <button onclick="window.location.href='/prob_officer/all';" class="normal-button">Back to All Probation Officers</button>
    </div>
    <div class="button-container">
        <button onclick="confirmDelete('{{probOfficer.Prob_ID}}')" class="normal-button">Delete</button>
    </div>
</div>
<br>
<table>
    <tr style="background: rgb(200, 200, 200)">
        <th>Street</th>
        <th>City, State</th>
        <th>Zipcode</th>
        <th>Phone</th>
        <th>Email</th>
        <th>Status</th>
    </tr>
    <tr>
        <td><span id="Street" ondblclick="makeEditable(this)">{{#if probOfficer.Street}}{{probOfficer.Street}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span></td>
        <td><span id="City" ondblclick="makeEditable(this)">{{#if probOfficer.City}}{{probOfficer.City}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span>, <span id="State" ondblclick="makeEditable(this)">{{#if probOfficer.State}}{{probOfficer.State}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span></td>
        <td><span id="Zip" ondblclick="makeEditable(this)">{{#if probOfficer.Zip}}{{probOfficer.Zip}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span></td>
        <td><span id="Phone" ondblclick="makeEditable(this)">{{#if probOfficer.Phone}}{{probOfficer.Phone}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span></td>
        <td><span id="Email" ondblclick="makeEditable(this)">{{#if probOfficer.Email}}{{probOfficer.Email}}{{else}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{/if}}</span></td>
        <td>
            <select id="Status" class="editable-select" onchange="saveData(this)">
                <option value="A" {{#if probOfficer.StatusActive}}selected{{/if}}>Active</option>
                <option value="I" {{#if probOfficer.StatusInactive}}selected{{/if}}>Inactive</option>
            </select>
        </td>
    </tr>
</table>
<br>
<table>
    <tr style="background: rgb(200, 200, 200)">
        <th>Sentence ID</th>
        <th>Type</th>
        <th>Probation Officer(s)</th>
        <th>Start</th>
        <th>End</th>
        <th>Violation</th>
    </tr>
    {{#each sentences}}
    <tr>
        <td>{{Sentence_ID}}</td>
        <td>{{Type}}</td>
        <td>{{#if Prob_ID}}<a href="/prob_officer/details/{{Prob_ID}}">#{{Prob_ID}}</a>{{else}}N/A{{/if}}</td>
        <td>{{Start_date}}</td>
        <td>{{End_date}}</td>
        <td>{{Violations}}</td>
    </tr>
    {{/each}}
</table>
<div class="button-container">
    <a href="/criminal/addSentence/{{criminal.Criminal_ID}}" class="normal-button">Add Sentence</a>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const detailsContainer = document.getElementById('prob-officer-details');
    const probOfficerId = detailsContainer.getAttribute('data-prob-officer-id');

    document.querySelectorAll('span, select').forEach(element => {
        element.ondblclick = function() {
            if (this.tagName === 'SPAN') {
                this.contentEditable = true;
                this.focus();
                this.onkeypress = function(e) {
                    if (e.key === 'Enter') {
                        e.preventDefault();
                        this.blur(); // Directly blur out after pressing Enter
                    }
                };
            } else {
                this.disabled = false; // Enable editing for select elements
            }
        };

        element.onblur = function() {
            saveData(probOfficerId, this); // Save the data when the element loses focus
        };
    });
});

function saveData(probOfficerId, element) {
    const field = element.id;
    const value = element.tagName === 'SELECT' ? element.value : element.innerText.trim();

    fetch(`/prob_officer/update/${field}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ id: probOfficerId, value: value })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            console.log('Update successful');
        } else {
            console.error('Update failed');
            alert('Failed to update. Please try again.');
        }
    })
    .catch(error => {
        console.error('Error updating:', error);
    });
}

function confirmDelete() {
    const probOfficerId = document.querySelector('#prob-officer-details').getAttribute('data-prob-officer-id');
    if (confirm("Are you sure you want to delete this probation officer?")) {
        fetch(`/prob_officer/delete/${probOfficerId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ id: probOfficerId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Probation officer successfully deleted');
                window.location.href = '/prob_officer/all'; 
            } else {
                alert('Failed to delete. Please try again.');
            }
        })
        .catch(error => {
            console.error('Error deleting probation officer:', error);
            alert('Failed to delete. Please try again.');
        });
    }
}
</script>
